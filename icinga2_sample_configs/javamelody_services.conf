

apply Service "File Descriptor Capacity " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "file_descriptor_capacity_pct"
  vars.javamelody_health_warning = vars.javamelody_health_file_descriptor_capacity_pct_warning
  vars.javamelody_health_critical = vars.javamelody_health_file_descriptor_capacity_pct_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = ":40"  }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = ":60"  }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

apply Service "Heap Capacity " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "heap_capacity_pct"
  vars.javamelody_health_warning = vars.javamelody_health_heap_capacity_pct_warning
  vars.javamelody_health_critical = vars.javamelody_health_heap_capacity_pct_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = ":95"  }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = ""  }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}


apply Service "Thread Capacity " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "thread_capacity_pct"
  vars.javamelody_health_warning = vars.javamelody_health_thread_capacity_pct_warning
  vars.javamelody_health_critical = vars.javamelody_health_thread_capacity_pct_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = ":85"  }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = ":93"  }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

apply Service "Non Heap Memory Usage Total " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "nonheap_memory_usage_total"
  vars.javamelody_health_warning = vars.javamelody_health_nonheap_memory_usage_total_warning
  vars.javamelody_health_critical = vars.javamelody_health_nonheap_memory_usage_total_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = "" }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = "" }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

apply Service "Classes Loaded in Total " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "loaded_classes_count_total"
  vars.javamelody_health_warning = vars.javamelody_health_loaded_classes_count_total_warning
  vars.javamelody_health_critical = vars.javamelody_health_loaded_classes_count_total_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = "" }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = "" }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

apply Service "Total Request Count (extrapolated) " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "request_count_timed"
  vars.javamelody_health_warning = vars.javamelody_health_request_count_timed_warning
  vars.javamelody_health_critical = vars.javamelody_health_request_count_timed_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = "" }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = "" }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

apply Service "Time spent on GC (extrapolated) " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "garbage_collection_timed"
  vars.javamelody_health_warning = vars.javamelody_health_garbage_collection_timed_warning
  vars.javamelody_health_critical = vars.javamelody_health_garbage_collection_timed_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = ":2500" }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = "" }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

apply Service "Total Error Count (extrapolated) " for (display_description => config in host.vars.http_vhosts) {
  import "generic-service"
  vars += config
  check_command = "javamelody_health"
  vars.javamelody_health_url = "http://127.0.0.1:$http_port$$javamelody_path$"
  vars.javamelody_health_metric = "error_count_timed"
  vars.javamelody_health_warning = vars.javamelody_health_error_count_timed_warning
  vars.javamelody_health_critical = vars.javamelody_health_error_count_timed_critical
  if (vars.javamelody_health_warning == "") { vars.javamelody_health_warning = ":20" }
  if (vars.javamelody_health_critical == "") { vars.javamelody_health_critical = "" }
  assign where "tomcat" in host.vars.services && config.javamelody_path
  ignore where host.vars.javamelody_disabled
}

